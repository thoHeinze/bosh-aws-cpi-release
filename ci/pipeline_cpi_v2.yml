---
groups:
  - name: bosh-aws-cpi-v2
    jobs:
      - build-cpi
      - compile-bosh-release
      - integration
      - bats
      - end-2-end

shared:
  - &prepare-director
    task: prepare-director
    file: pipelines/shared/tasks/prepare-director.yml
    params: &prepare-director-params
      INFRASTRUCTURE:     aws
      DIRECTOR_VARS_FILE: {{aws_director_vars_file}}

  - &deploy-director
    task: deploy-director
    file: pipelines/shared/tasks/deploy-director.yml

  - &run-bats
    task: run-bats
    file: pipelines/shared/tasks/run-bats.yml
    params:
      INFRASTRUCTURE:     aws
      STEMCELL_NAME:      bosh-aws-xen-hvm-ubuntu-trusty-go_agent
      BAT_INFRASTRUCTURE: aws
      BAT_NETWORKING:     manual
      BAT_RSPEC_FLAGS:    "--tag ~multiple_manual_networks --tag ~root_partition"

  - &run-end-2-end
    task: run-e2e
    file: bosh-cpi-src/ci/tasks/run-e2e.yml
    params:
      BOSH_AWS_KMS_KEY_ARN: {{aws_kms_key_arn}}

  - &create-environment
    put: environment
    params:
      delete_on_failure: true
      generate_random_name: true
      terraform_source: bosh-cpi-src/ci/assets/terraform

  - &destroy-environment
    put: environment
    params:
      action: destroy
      env_name_file: environment/name
      terraform_source: bosh-cpi-src/ci/assets/terraform
    get_params:
      action: destroy

  - &ensure-terminated
    task: ensure-terminated
    file: bosh-cpi-src/ci/tasks/ensure-terminated.yml
    params:
      AWS_ACCESS_KEY_ID:     {{aws_access_key}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_key}}
      AWS_DEFAULT_REGION:    {{aws_region}}

  - &teardown
    task: teardown
    file: pipelines/shared/tasks/teardown.yml

jobs:
  - name: build-cpi
    serial: true
    plan:
      - aggregate:
        - {trigger: true, get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {trigger: false, get: version-semver, params: {bump: patch}}
        - {trigger: false, get: bosh-cli}
        - {trigger: true, get: bosh-src, resource: bosh-src-in}
      - put: version-semver
        params: {file: version-semver/number}
      - task: build
        file: bosh-cpi-src/ci/tasks/build-candidate.yml
      - put: bosh-cpi-dev-artifacts
        params: {file: candidate/*.tgz}

  - name: integration
    serial: true
    plan:
      - aggregate:
        - {trigger: true,  passed: [build-cpi], get: bosh-cpi-release, resource: bosh-cpi-dev-artifacts}
        - {trigger: false, passed: [build-cpi], get: bosh-cpi-src, resource: bosh-cpi-src-in}
      - <<: *create-environment
      - task: test
        file: bosh-cpi-src/ci/tasks/run-integration.yml
        params:
          AWS_ACCESS_KEY_ID:                       {{aws_access_key}}
          AWS_SECRET_ACCESS_KEY:                   {{aws_secret_key}}
          BOSH_AWS_PERMISSIONS_AUDITOR_KEY_ID:     {{aws_access_key__auditor}}
          BOSH_AWS_PERMISSIONS_AUDITOR_SECRET_KEY: {{aws_secret_key__auditor}}
          AWS_DEFAULT_REGION:                      {{aws_region__primary}}
          BOSH_AWS_KMS_KEY_ARN:                    {{aws_kms_key_arn}}
        ensure:
          do:
            - <<: *ensure-terminated
            - <<: *destroy-environment

  - name: compile-bosh-release
    serial: true
    plan:
      - aggregate:
          - {get: bosh-dev-version, resource: bosh-dev-version}
          - {get: bosh-src, trigger: true, resource: bosh-src-in}
          - {get: bosh-cli}
          - {get: bosh-cpi-src, resource: bosh-cpi-src-in}
      - task: compile-bosh-release
        file: bosh-cpi-src/ci/tasks/build-bosh-dev.yml
      - put: bosh-release
        resource: bosh-dev-tarballs
        params:
          file: "release/bosh-dev-release-for-cpi-refactor.tgz"

  - name: bats
    serial: true
    plan:
      - aggregate:
        - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-cpi]}
        - {get: bosh-release,    trigger: false, resource: bosh-dev-tarballs, passed: [compile-bosh-release]}
        - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in, passed: [build-cpi]}
        - {get: stemcell,        trigger: false, resource: precompiled-stemcell}
        - {get: bosh-deployment, trigger: false}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: bats,            trigger: false}
      - <<: *create-environment
      - do:
        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            OPTIONAL_OPS_FILE:  |
              -o pipelines/shared/assets/ops/remove-hm.yml
              -o bosh-deployment/external-ip-with-registry-not-recommended.yml
              -o pipelines/shared/assets/ops/remove-provider-cert.yml
        - do:
            - <<: *deploy-director
            - <<: *run-bats
          ensure:
            do:
              - <<: *teardown
              - <<: *ensure-terminated
        ensure:
          do:
            - <<: *destroy-environment

  - name: end-2-end
    serial: true
    plan:
      - aggregate:
        - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-cpi]}
        - {get: bosh-release,    trigger: false, resource: bosh-dev-tarballs, passed: [compile-bosh-release]}
        - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in, passed: [build-cpi]}
        - {get: stemcell,        trigger: false, resource: precompiled-stemcell}
        - {get: heavy-stemcell,  trigger: false, resource: heavy-ubuntu-stemcell}
        - {get: bosh-deployment, trigger: false}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
      - <<: *create-environment
      - do:
        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            OPTIONAL_OPS_FILE:  |
              -o bosh-deployment/external-ip-with-registry-not-recommended.yml
              -o pipelines/shared/assets/ops/remove-provider-cert.yml
              -o pipelines/aws/assets/ops/iam-instance-profile-ops-file.yml
        - do:
            - <<: *deploy-director
            - <<: *run-end-2-end
          ensure:
            do:
              - <<: *teardown
              - <<: *ensure-terminated
        ensure:
          do:
            - <<: *destroy-environment

resource_types:
  - name: terraform_type
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource

resources:
  - name: bosh-cpi-dev-artifacts
    type: s3
    source:
      regexp: bosh-aws-cpi-(\d+\.\d+\.\d+)\.tgz
      bucket: bosh-toronto-cpi-v2
      region_name: ((s3_aws_cpi_pipeline_bucket_region))
      access_key_id: ((aws_access_key))
      secret_access_key: ((aws_secret_key))
  - name: bosh-cpi-src-in
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-aws-cpi-release.git
      branch: cpi-api-version
      ignore_paths:
        - .final_builds/**/*.yml
        - releases/**/*.yml
  - name: bosh-src-in
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh.git
      branch: external-cpi-refactor
      ignore_paths:
        - .final_builds/**/*.yml
        - releases/**/*.yml
  - name: version-semver
    type: semver
    source:
      key:               current-version # dev-release version
      bucket:            bosh-toronto-cpi-v2
      access_key_id:     {{aws_access_key}}
      secret_access_key: {{aws_secret_key}}
  - name: bosh-dev-version
    type: semver
    source:
      bucket: bosh-toronto-cpi-v2
      key: version
      access_key_id: {{aws_access_key}}
      secret_access_key: {{aws_secret_key}}
  - name: bosh-dev-tarballs
    type: s3
    source:
      bucket: bosh-toronto-cpi-v2
      access_key_id: {{aws_access_key}}
      secret_access_key: {{aws_secret_key}}
      versioned_file: "bosh-dev-release.tgz"
  - name: environment
    type: terraform_type
    source:
      storage:
        access_key_id:     {{aws_access_key__primary}}
        secret_access_key: {{aws_secret_key__primary}}
        bucket:            {{terraform_bucket}}
        bucket_path:       terraform-state
      vars:
        access_key: {{aws_access_key__primary}}
        secret_key: {{aws_secret_key__primary}}
        region:     {{aws_region__primary}}
        public_key: {{cpi_pipeline_public_key}}
  - name: bosh-cli
    type: s3
    source:
      regexp: bosh-cli-([0-9.]+)-linux-amd64
      bucket: bosh-cli-artifacts
      region_name: us-east-1
  - name: pipelines
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-cpi-certification
      branch: master
  - name: precompiled-stemcell
    type: s3
    source:
      bucket: bosh-aws-light-stemcells
      regexp: light-bosh-stemcell-(3363.12)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
      region_name: us-east-1
  - name: heavy-ubuntu-stemcell
    type: bosh-io-stemcell
    source:
      name: &heavy-ubuntu-stemcell bosh-aws-xen-ubuntu-trusty-go_agent
      force_regular: true
  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: gocli-bats
  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master

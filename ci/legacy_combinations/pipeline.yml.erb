---
groups:
  - name: all-jobs
    jobs:
    - build-cpi
    - integration
    - bats-dir1-cpi1-sc2
    - bats-dir2-cpi2-sc1
    - bats-dir2-cpi1-sc1
  - name: bosh-aws-cpi-v2
    jobs:
    - build-cpi
    - integration
  - name: bats
    jobs:
    - bats-dir1-cpi1-sc2
    - bats-dir2-cpi2-sc1
    - bats-dir2-cpi1-sc1

shared:
  - &prepare-director
    task: prepare-director
    file: pipelines/shared/tasks/prepare-director.yml
    params: &prepare-director-params
      INFRASTRUCTURE:     aws
      DIRECTOR_VARS_FILE: {{aws_director_vars_file}}

  - &deploy-director
    task: deploy-director
    file: pipelines/shared/tasks/deploy-director.yml

  - &create-environment
    put: environment
    params:
      delete_on_failure: true
      generate_random_name: true
      terraform_source: bosh-cpi-src/ci/assets/terraform
      override_files: [bosh-cpi-src/ci/assets/terraform/e2e/e2e.tf]

  - &destroy-environment
    put: environment
    params:
      action: destroy
      env_name_file: environment/name
      terraform_source: bosh-cpi-src/ci/assets/terraform
    get_params:
      action: destroy

  - &ensure-terminated
    task: ensure-terminated
    file: bosh-cpi-src/ci/tasks/ensure-terminated.yml
    params:
      AWS_ACCESS_KEY_ID:     {{aws_access_key}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_key}}
      AWS_DEFAULT_REGION:    {{aws_region}}

  - &teardown
    task: teardown
    file: pipelines/shared/tasks/teardown.yml

jobs:
  - name: build-cpi
    serial: true
    plan:
      - aggregate:
        - {trigger: true, get: bosh-cpi-src, resource: bosh-cpi-src}
        - {trigger: false, get: version-semver, params: {bump: patch}}
        - {trigger: false, get: bosh-cli, resource: bosh-cli-alpha}
      - put: version-semver
        params: {file: version-semver/number}
      - task: build
        file: bosh-cpi-src/ci/tasks/build-candidate.yml
      - put: bosh-cpi-build-artifacts
        params: {file: candidate/*.tgz}

  - name: integration
    serial: true
    plan:
      - aggregate:
        - {trigger: true, passed: [build-cpi], get: bosh-cpi-src, resource: bosh-cpi-src}
      - <<: *create-environment
      #- aggregate:
      - task: test-cpi-v2
        file: bosh-cpi-src/ci/tasks/run-integration.yml
        params:
          AWS_ACCESS_KEY_ID:                       {{aws_access_key__cpi}}
          AWS_SECRET_ACCESS_KEY:                   {{aws_secret_key__cpi}}
          BOSH_AWS_PERMISSIONS_AUDITOR_KEY_ID:     {{aws_access_key__auditor}}
          BOSH_AWS_PERMISSIONS_AUDITOR_SECRET_KEY: {{aws_secret_key__auditor}}
          AWS_DEFAULT_REGION:                      {{aws_region__primary}}
          BOSH_AWS_KMS_KEY_ARN:                    {{aws_kms_key_arn}}
          BOSH_AWS_KMS_KEY_ARN_OVERRIDE:           {{aws_kms_key_arn_override}}
          BOSH_AWS_CPI_API_VERSION: 2
      - <<: *destroy-environment
      - <<: *create-environment
      - task: test-cpi-v1
        file: bosh-cpi-src/ci/tasks/run-integration.yml
        params:
          AWS_ACCESS_KEY_ID:                       {{aws_access_key__cpi}}
          AWS_SECRET_ACCESS_KEY:                   {{aws_secret_key__cpi}}
          BOSH_AWS_PERMISSIONS_AUDITOR_KEY_ID:     {{aws_access_key__auditor}}
          BOSH_AWS_PERMISSIONS_AUDITOR_SECRET_KEY: {{aws_secret_key__auditor}}
          AWS_DEFAULT_REGION:                      {{aws_region__primary}}
          BOSH_AWS_KMS_KEY_ARN:                    {{aws_kms_key_arn}}
          BOSH_AWS_KMS_KEY_ARN_OVERRIDE:           {{aws_kms_key_arn_override}}
          BOSH_AWS_CPI_API_VERSION: 1
    ensure:
      do:
        - <<: *ensure-terminated
        - <<: *destroy-environment

<%
combos = [
  {
    name: 'dir1-cpi1-sc2',
    cpi_version: 1,
    stemcell: { name: 'stemcell', resource: 'light-ubuntu-stemcell-v2', stemcell_name: 'bosh-aws-xen-hvm-ubuntu-xenial-go_agent' },
    director: { name: 'bosh-release', resource: 'precompiled-v1-bosh-release', ops_file: ''},
    cpi: { name: 'cpi-release', resource: 'boshio-cpi-v1', passed: '', version: '72'}
  },
  {
    name: 'dir2-cpi2-sc1',
    cpi_version: 2,
    stemcell: { name: 'stemcell', resource: 'light-ubuntu-stemcell-v1', stemcell_name: 'bosh-aws-xen-hvm-ubuntu-trusty-go_agent' },
    director: { name: 'bosh-release', resource: 'bosh-dev-tarballs', ops_file: '-o pipelines/aws/assets/ops/director_cpi_version.yml'},
    cpi: { name: 'cpi-release', resource: 'bosh-cpi-build-artifacts', passed: 'build-cpi', version: ''}
  },
  {
    name: 'dir2-cpi1-sc1',
    cpi_version: 1,
    stemcell: { name: 'stemcell', resource: 'light-ubuntu-stemcell-v1', stemcell_name: 'bosh-aws-xen-hvm-ubuntu-trusty-go_agent' },
    director: { name: 'bosh-release', resource: 'bosh-dev-tarballs', ops_file: '-o pipelines/aws/assets/ops/director_cpi_version.yml'},
    cpi: { name: 'cpi-release', resource: 'boshio-cpi-v1', passed: '', version: '72'}
  }
]

combos.each do |combo|
%>

  - name: bats-<%= combo[:name] %>
    serial: true
    plan:
      - aggregate:
        - {get: <%= combo[:cpi][:name] %>, trigger: true,  resource: <%= combo[:cpi][:resource] %>, passed: [<%= combo[:cpi][:passed]%>]}
        - {get: <%= combo[:director][:name] %>, trigger: true, resource: <%= combo[:director][:resource] %> }
        - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src, passed: [build-cpi]}
        - {get: <%= combo[:stemcell][:name] %>, trigger: true, resource: <%= combo[:stemcell][:resource] %>}
        - {get: bosh-deployment, trigger: false}
        - {get: pipelines,       trigger: true}
        - {get: bosh-cli, resource: bosh-cli-alpha, trigger: true}
        - {get: bats,            trigger: false}
      - <<: *create-environment
      - do:
        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            OPTIONAL_OPS_FILE:  |
              -o pipelines/shared/assets/ops/remove-hm.yml
              -o bosh-deployment/external-ip-with-registry-not-recommended.yml
              -o bosh-deployment/experimental/blobstore-https.yml
              -o pipelines/shared/assets/ops/remove-provider-cert.yml
              -o bosh-deployment/experimental/bpm.yml
              <%= combo[:director][:ops_file]%>
            CPI_VERSION: <%= combo[:cpi_version] %>
        - do:
            - <<: *deploy-director
            - task: run-bats
              file: pipelines/shared/tasks/run-bats.yml
              params:
                INFRASTRUCTURE:     aws
                STEMCELL_NAME: <%= combo[:stemcell][:stemcell_name] %>
                BAT_INFRASTRUCTURE: aws
                BAT_NETWORKING:     dynamic
                BAT_RSPEC_FLAGS:    "--tag ~multiple_manual_networks --tag ~root_partition"
          ensure:
            do:
              - <<: *teardown
              - <<: *ensure-terminated
        ensure:
          do:
            - <<: *destroy-environment
<% end %>
resource_types:
  - name: terraform_type
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource

resources:
  - name: boshio-cpi-v1
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh-aws-cpi-release
      regexp: "72"
  - name: bosh-cpi-src
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-aws-cpi-release.git
      branch: master
      ignore_paths:
        - .final_builds/**/*.yml
        - releases/**/*.yml
  - name: bosh-cpi-build-artifacts
    type: s3
    source:
      access_key_id: {{aws_access_key__primary}}
      secret_access_key: {{aws_secret_key__primary}}
      bucket: bosh-aws-cpi-pipeline
      regexp: bosh-aws-cpi-(\d+\.\d+\.\d+)\.tgz
      region_name: us-east-1
  - name: version-semver
    type: semver
    source:
      key:               current-version # dev-release version
      bucket:            bosh-toronto-cpi-v2
      access_key_id:     {{aws_access_key}}
      secret_access_key: {{aws_secret_key}}
  - name: bosh-dev-tarballs
    type: s3
    source:
      bucket: bosh-candidate-release-tarballs
      access_key_id: {{aws_access_key}}
      secret_access_key: {{aws_secret_key}}
      versioned_file: "bosh-dev-release.tgz"
      region_name: us-east-1
  - name: environment
    type: terraform_type
    source:
      storage:
        access_key_id:     {{aws_access_key__primary}}
        secret_access_key: {{aws_secret_key__primary}}
        bucket:            {{terraform_bucket}}
        bucket_path:       terraform-state
      vars:
        access_key: {{aws_access_key__primary}}
        secret_key: {{aws_secret_key__primary}}
        region:     {{aws_region__primary}}
        public_key: {{cpi_pipeline_public_key}}
  - name: bosh-cli-alpha
    type: s3
    source:
      regexp: bosh-cli-([0-9.]+)-linux-amd64
      bucket: bosh-cli-artifacts
      region_name: us-east-1
  - name: pipelines
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-cpi-certification
      branch: cpi_version
  - name: light-ubuntu-stemcell-v1
    type: s3
    source:
      bucket: bosh-aws-light-stemcells
      regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
      region_name: us-east-1
  - name: light-ubuntu-stemcell-v2
    type: s3
    source:
      bucket: bosh-aws-light-stemcells
      regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-xenial-go_agent.tgz
      region_name: us-east-1
  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master
  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master
  - name: precompiled-v1-bosh-release
    type: s3
    source:
      regexp: bosh-2(.*)-ubuntu-trusty-3(.*).tgz
      bucket: bosh-compiled-release-tarballs
      region_name: us-east-1
